<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kh.cocoa.dao.AttendanceDAO">
    <insert id="startWork">
        insert into attendance values (ATTENDANCE_SEQ.NEXTVAL, systimestamp, null, default, #{emp_code})
    </insert>

    <insert id="outSideWork">
        insert into attendance values (ATTENDANCE_SEQ.NEXTVAL, systimestamp, null, 'out', #{emp_code})
    </insert>

    <select id="checkStart" resultType="java.sql.Timestamp">
        select start_time from attendance where to_char(start_time, 'YYYYMMDD') = to_char(sysdate, 'YYYYMMDD') and emp_code = #{emp_code}
    </select>

    <select id="checkEnd" resultType="java.sql.Timestamp">
        select end_time from attendance where to_char(start_time, 'YYYYMMDD') = to_char(sysdate, 'YYYYMMDD') and emp_code = #{emp_code}
    </select>

    <update id="offWork">
        update attendance set end_time = systimestamp where to_char(start_time, 'YYYYMMDD') = to_char(sysdate, 'YYYYMMDD') and emp_code = #{emp_code}
    </update>

    <select id="getAttendanceList" resultType="kh.cocoa.dto.AttendanceDTO">
    select * from attendance where emp_code = #{emp_code}
    </select>

    <select id="getAtdTime" resultType="kh.cocoa.dto.AttendanceDTO">
        SELECT * FROM ATTENDANCE where start_time between  NEXT_DAY(SYSDATE-8,'일요일') and NEXT_DAY(SYSDATE,'토요일') and emp_code=#{emp_code} and end_time is not null
    </select>

    <select id="getMonthAtdTime" resultType="kh.cocoa.dto.AttendanceDTO">
        SELECT * FROM ATTENDANCE WHERE substr(start_time,0,8) between TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE) and emp_code=#{emp_code} and end_time is not null
    </select>

    <select id="isAtd" resultType="Integer">
        SELECT COUNT(*) from attendance where substr(start_time,0,8) = substr(sysdate,0,8) and emp_code=#{emp_code}
    </select>

    <select id="isInWork" resultType="String">
        SELECT substr(start_time,10,8) from attendance where substr(start_time,0,8)=substr(sysdate,0,8) and start_time is not null and emp_code=#{emp_code}
    </select>

    <select id="isOutWork" resultType="String">
        SELECT substr(end_time,10,8) from attendance where substr(start_time,0,8)=substr(sysdate,0,8) and end_time is not null and emp_code=#{emp_code}
    </select>

    <insert id="startWork2">
        <choose>
            <when test="status=='in'">
                insert into attendance values (ATTENDANCE_SEQ.NEXTVAL, systimestamp, null, 'IN', #{emp_code},'')
            </when>
            <when test="status=='late'">
                insert into attendance values (ATTENDANCE_SEQ.NEXTVAL, systimestamp, null, 'LATE', #{emp_code},'')
            </when>
            <otherwise>
                insert into attendance values (ATTENDANCE_SEQ.NEXTVAL, systimestamp, null, 'OUT', #{emp_code},'')
            </otherwise>
        </choose>
    </insert>

    <update id="reRegStartTime">
       update attendance set start_time=sysdate where emp_code=#{emp_code} and substr(start_time,0,8) = substr(sysdate,0,8)
    </update>

    <update id="endWork">
         update attendance set end_time=sysdate, overtime=#{overtime} where emp_code=#{emp_code} and substr(start_time,0,8) = substr(sysdate,0,8)
    </update>

    <select id="isReq" resultType="kh.cocoa.dto.AtdChangeReqDTO">
        SELECT * FROM ATDCHANGEREQ WHERE ATD_SEQ=#{atd_seq}
    </select>

    <select id="getAttendanceList2" resultType="kh.cocoa.dto.AttendanceDTO">
        select * from (select A.seq,to_char(A.start_time,'HH:MM:SS') sub_start_time,to_char(A.start_time,'HH:MM:SS') sub_end_time,to_char(A.start_time,'YY-MM-DD DY') today,
        case A.STATUS when 'IN' then '정상출근' when 'OUT' then '외근' when 'LATE' then '지각' end as status,case REQ.STATUS when 'Y' then '처리' when 'N' then '검토중' else '-' END AS REQ_STATUS
        FROM ATTENDANCE A FULL OUTER JOIN ATDCHANGEREQ REQ ON A.SEQ=REQ.ATD_SEQ WHERE a.emp_code=#{emp_code} ORDER BY A.SEQ DESC)
        where ROWNUM<![CDATA[ <= ]]>#{number}
    </select>

    <select id="getSearchAtd" resultType="kh.cocoa.dto.AttendanceDTO">
        select * from (select A.seq,to_char(A.start_time,'HH:MM:SS') sub_start_time,to_char(A.start_time,'HH:MM:SS') sub_end_time,to_char(A.start_time,'YY-MM-DD DY') today,
        case A.STATUS when 'IN' then '정상출근' when 'OUT' then '외근' when 'LATE' then '지각' end as status,case REQ.STATUS when 'Y' then '처리' when 'N' then '검토중' else '-' END AS REQ_STATUS
        FROM ATTENDANCE A FULL OUTER JOIN ATDCHANGEREQ REQ ON A.SEQ=REQ.ATD_SEQ WHERE  a.emp_code=#{emp_code} and a.start_time BETWEEN #{start_time} and '${end_time}' and A.STATUS like '%${search}%' ORDER BY A.SEQ DESC)
        where ROWNUM<![CDATA[ <= ]]>#{number}
    </select>

    <select id="countStatusLate" resultType="String">
        select COUNT(*) from attendance where status='LATE' and emp_code=#{emp_code} and start_time BETWEEN TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE)
    </select>

    <select id="countStatusWork" resultType="String">
        select COUNT(*) from attendance where emp_code=#{emp_code} and start_time BETWEEN TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE)
    </select>

    <select id="countWorkHour" resultType="int">
        select SUM(EXTRACT(Hour From(end_time-start_time))) hour from attendance where emp_code=#{emp_code} and start_time BETWEEN TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE)
    </select>

    <select id="countWorkMin" resultType="int">
        select SUM(EXTRACT(MINUTE From(end_time-start_time))) MINUTE from attendance where emp_code=#{emp_code}and start_time BETWEEN TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE)
    </select>
</mapper>